# .github/workflows/code-review.yml

name: "Gemini Code Review"

# This action will trigger on pull requests that target the 'main' or 'master' branch.
on: 
  pull_request:
    branches:
      - main
      - master
    types: [opened, synchronize]

# Set default permissions for the job, but allow overriding.
permissions:
  contents: read

jobs:
  review:
    # Grant write permission to the pull-requests scope for this job only.
    permissions:
      contents: read          # Required to check out the code.
      pull-requests: write  # Required to post comments on the PR.

    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository code.
      # fetch-depth: 0 is important to fetch all history for a proper diff.
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # Specify your Go version
          cache: true

      # Step 3: Download Go dependencies
      - name: Download dependencies
        run: go mod download

      # Step 4: Run Go tests
      - name: Run Go tests
        run: |
          echo "Running all Go tests..."
          go test -v ./...
          echo "All tests completed successfully!"

      # Step 5: Run Go build to ensure compilation
      - name: Build project
        run: |
          echo "Building project..."
          go build ./...
          echo "Build completed successfully!"

      # Step 6: Install Bun using the official action.
      # This is the recommended and most efficient way to install Bun in a workflow.
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          # You can specify a version or use 'latest'
          bun-version: latest

      # Step 7: Install the Gemini CLI using Bun.
      # We use 'bun install -g' to install the package globally.
      - name: Install Gemini CLI with Bun
        run: |
          bun install -g @google/gemini-cli
          echo "Verifying gemini installation..."
          gemini --version

      # Step 8: Run the review script.
      # The 'gemini' command is now available in the PATH.
      - name: Run Code Review Script
        env:
          # The GITHUB_TOKEN is automatically provided by GitHub Actions.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # You must create a repository secret named GEMINI_API_KEY with your API key.
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # Pass the PR number to the script.
          PR_NUMBER: ${{ github.event.pull_request.number }}
          # Pass the base and head commit SHAs for an accurate diff.
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: ./.github/scripts/review.sh